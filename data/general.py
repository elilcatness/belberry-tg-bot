from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ParseMode
from telegram.error import BadRequest
from telegram.ext import ConversationHandler, CallbackContext

from data.info import info_menu
from data.utils import delete_last_message, get_config, clear_temp_vars


@delete_last_message
def start(update, context):
    clear_temp_vars(context)
    if context.user_data.get('specialist_id'):
        context.user_data.pop('specialist_id')
    if context.user_data.get('service_id'):
        context.user_data.pop('service_id')
    if context.user_data.get('promotion_id'):
        context.user_data.pop('promotion_id')
    cfg = get_config()
    buttons = [
         [InlineKeyboardButton('–î–∞', callback_data='help'), InlineKeyboardButton('–ü–æ–∑–∂–µ', callback_data='later')],
         [InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url=cfg.get('URL –∫–ª–∏–Ω–∏–∫–∏', {}).get('val', 'https://belberry.net/'))]]
    phone = cfg.get('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', {}).get('val', '–ù–µ —É–∫–∞–∑–∞–Ω')
    if isinstance(phone, list) and len(phone) > 1:
        phone = phone[0]
    text = (f'–ü—Ä–∏–≤–µ—Ç, %s! –Ø –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏ <b>{cfg.get("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∏–Ω–∏–∫–∏", {}).get("val", "*")}</b>.\n'
            f'–Ø –ø–æ–º–æ–≥—É —É–∑–Ω–∞—Ç—å –ø—Ä–æ –Ω–∞—à—É –∫–ª–∏–Ω–∏–∫—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ.\n'
            f'–ú–æ–≥—É –±—ã—Å—Ç—Ä–æ –∑–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –ø—Ä–∏—ë–º –∫ –¥–æ–∫—Ç–æ—Ä—É.\n'
            f'–ê —Ç–∞–∫–∂–µ –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –ø—Ä–∏—ë–º–µ, –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∞–∫—Ü–∏—è—Ö –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö üòä\n\n'
            f'–¢–∞–∫–∂–µ —Å–æ –º–Ω–æ–π –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: {phone}\n\n'
            f'<b>–ù—É–∂–Ω–∞ –ª–∏ –í–∞–º –ø–æ–º–æ—â—å?</b>')
    if update.message:
        context.user_data['id'] = update.message.from_user.id
        context.user_data['first_name'] = update.message.from_user.first_name
    if str(context.user_data['id']) in cfg.get('admins', {}).get('val', []):
        buttons.extend([[InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (admin)', callback_data='data')],
                        [InlineKeyboardButton('–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (admin)', callback_data='ask')],
                        [InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Å—É—â–Ω–æ—Å—Ç—å (admin)', callback_data='add_menu')],
                        [InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–Ω–æ—Å—Ç—å (admin)', callback_data='edit_menu')],
                        [InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —Å—É—â–Ω–æ—Å—Ç—å (admin)', callback_data='delete_menu')]])
    if cfg.get("–§–æ—Ç–æ –∫–ª–∏–Ω–∏–∫–∏", {}).get('val'):
        try:
            return (context.bot.send_photo(context.user_data['id'], cfg["–§–æ—Ç–æ –∫–ª–∏–Ω–∏–∫–∏"]['val'],
                                           text % context.user_data['first_name'],
                                           reply_markup=InlineKeyboardMarkup(buttons), parse_mode=ParseMode.HTML),
                    'menu')
        except BadRequest:
            pass
    return (context.bot.send_message(context.user_data['id'], text % context.user_data['first_name'],
                                     reply_markup=InlineKeyboardMarkup(buttons), parse_mode=ParseMode.HTML),
            'menu')


@delete_last_message
def later(_, context: CallbackContext):
    context.bot.send_message(
        context.user_data['id'],
        f'–•–æ—Ä–æ—à–æ, {context.user_data["first_name"]}.\n–ï—Å–ª–∏ –í—ã —Ä–µ—à–∏—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –Ω–∞—à—É –∫–ª–∏–Ω–∏–∫—É, '
        f'–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –¥–∞–Ω–Ω–æ–º —á–∞—Ç–µ')
    return info_menu(_, context)
